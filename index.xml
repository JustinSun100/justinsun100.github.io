<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>青的博客</title>
    <link>http://example.org/</link>
    <description>Recent content on 青的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sat, 31 Aug 2019 22:15:32 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTML重点标签</title>
      <link>http://example.org/posts/html%E9%87%8D%E7%82%B9%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sat, 31 Aug 2019 22:15:32 +0800</pubDate>
      
      <guid>http://example.org/posts/html%E9%87%8D%E7%82%B9%E6%A0%87%E7%AD%BE/</guid>
      <description>HTML 常用标签 几个很常用的标签 这里有几个常见的标签给大家介绍一下：
a/img/iframe/table
a 标签 &amp;lt;a href=&amp;quot;http//:google.com&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;  a 标签的作用是：  跳转到一个外部页面； 跳转到内部锚点（锚点就是跳转到具有 id 属性的标签位置，在 id 前加#即可）； 跳转到邮箱或电话；  a 标签的属性：  href:超链接，链接到一个网络。 target：意思是在那个在哪一个窗口打开超链接，有 4 个值；   _blank：在新的页面打开 _self：在当前页面打开 _top：在顶层页面打开 _parent：在父级页面打开   download:不是打开网页，而是下载网页 rel=noopener:阻止将引用着信息传递给新选项卡，可以防止网站进行跨站点的恶意攻击，提高安全性  注意：如果想要点击 a 标签，网页什么也不做只是刷新一次，只有将 href 属性设置为 js 伪协议
iframe 标签： iframe 标签是一个内联框架元素，他能将另一个 HTML 页面嵌入到当前页面中
这就是在网页中嵌套了一个 iframe，红色区域就是一个 iframe 窗口
table 结构：
&amp;lt;table&amp;gt; &amp;lt;thead&amp;gt;&amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt;&amp;lt;/tbody&amp;gt; &amp;lt;tfoot&amp;gt;&amp;lt;/tfoot&amp;gt; &amp;lt;/table&amp;gt;  三个标签与顺序无关，总是 thead 的内容在上，tfoot 内容在下</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://example.org/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Thu, 22 Aug 2019 14:48:02 +0800</pubDate>
      
      <guid>http://example.org/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description> HTML 入门 HTML 是谁发明的？ 蒂莫西·约翰·伯纳斯-李爵士，英国计算机科学家。他是万维网的发明者，1990 年 12 月 25 日，他成功利用互联网实现了超文本传输协议客户端与服务器的第一次通讯
HTML 起手应该写什么 一个完整的起手式：
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;  开头写的东西，DOCTYPE 就是文档类型的意思，这里的文档类型就是 html。lang 是语言，这里是英文， 如果想改成汉字就将“en”改为“zh-CN”。
&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;  文件字符编码为“UTF-8”
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot; /&amp;gt;  禁用缩放，兼容手机。
&amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot; /&amp;gt;  告诉 IE 使用最新内核。
&amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;  title 中为文档的标题。
常用的表章节的标签 h1——h6/section/article/main/aside/p/ h1——h6 是标题标签。h1 最大，h6 最小，他们是自动加黑加粗的。
section 是章节标签，main 标签里面放主要内容，aside 标签里面放旁支内容，article 使文章标签，这些标签都是章节标签。
HTML 的全局属性 class/contenteditable/hidden/id/style/tabindex/title  class 创建一个类名 contenteditable 可以让一个标签被编辑 hidden 隐藏 id 创建一个 id，不要轻易用它（浏览器无法识别 id 的唯一性） style 样式 tabindex 按下 tab 时跳转的位置（可交互的内容），赋值为顺序，为 0 时最后访问，为-1 时不访问。 title 标题  常用的内容标签 a/strong/em/code/pre  a 链接 strong 重要 em 强调 code 代码（里面的内容是等宽的） pre 可以保留你的输入，浏览器将连续空白视为一个空格，用 pre 可以避免这种情况。  </description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://example.org/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Mon, 19 Aug 2019 00:16:43 +0800</pubDate>
      
      <guid>http://example.org/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description>大家好 我的博客开通了，希望能写出好文章给大家看。</description>
    </item>
    
    <item>
      <title>如何搭建一篇博客</title>
      <link>http://example.org/posts/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</link>
      <pubDate>Sun, 11 Aug 2019 11:39:57 +0800</pubDate>
      
      <guid>http://example.org/posts/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
      <description> 在hugo上搭建博客 终于开始写博客啦，就写写怎么搭建一个hugo博客吧  想要在hugo上搭建一篇博客，首先你要会使用github，因为我们需要GitHub Pages 来托管我们的静态页面。 当你会使用GitHub之后，进入hugo官网，按照官网的快速步骤执行，这里就不赘述了。要注意的是，如果你的网速不好，可能在git中下载不下来主题，可以直接下载zip文件放到你博客编辑目录下的themes目录内，再进入config.toml配置。 搭建博客的过程中回到很多问题，我也是一个新手，每个问题都要根据提示查询并思考，以后的学习中也应该是这样，欢迎大家来搭建hugo博客。  几个可能用到的网址：
 https://gohugo.io/getting-started/quick-start/ https://github.com/  </description>
    </item>
    
  </channel>
</rss>